在顺序表中，以第一个元素为枢轴，将顺序表划分为左右部分
顺序：	小<枢轴<大
//int arr[]定义数组arr
//长度为n
void main 划分(int arr[],int n)
{
	int temp;		//定义枢轴
	int i=0;		//定义从前往后遍历数的i
	int j=n-1;		//定义从后往前遍历数的j，从最后n-1
	temp=arr[i];	//把第一个元素作为枢轴，依次进行对后面的值进行比较
	while(i<j)
	{
		while(i<j&&arr[j]>=temp)	//当i<j并且数组中j位置的值大于等于枢轴的值，不发生交换
			--j;					//j位置前移一位
		if(i<j)
		{
			arr[i]=arr[j];			//如果上述条件不成立（数组中j位置的值小于枢轴的值，就需要放在左边），发生交换
			++i;					//i位置后移一位
		}
		while(i<j&&arr[j]<temp)		//当i<j并且数组中j位置的值小于枢轴的值，不发生交换
			++i;					//i位置后移一位
		if(i<j)
		{
			arr[j]=arr[i];			//如果上述条件不成立（数组中j位置的值大于等于枢轴的值，就需要放在右边），发生交换
			--j;					//j位置前移一位
		}
	}
	arr[i]=temp;					//枢轴的值赋给当前数组i位置
}



在顺序表中，添加一个compare变量进行比较，枢轴（temp的值）还是元素的第一个，将顺序表划分为左右部分
顺序：	小<枢轴<大
只不过添加了一个compare进行比较
//int arr[]定义数组arr
//长度为n
void main 划分(int arr[],int n，int comp)
{
	int temp;		//定义枢轴
	int i=0;		//定义从前往后遍历数的i
	int j=n-1;		//定义从后往前遍历数的j，从最后n-1
	temp=arr[i];	//把第一个元素作为枢轴，依次进行对后面的值进行比较
	while(i<j)
	{
		while(i<j&&arr[j]>=comp)	//当i<j并且数组中j位置的值大于等于comp的值，不发生交换
			--j;					//j位置前移一位
		if(i<j)
		{
			arr[i]=arr[j];			//如果上述条件不成立（数组中j位置的值小于comp的值，就需要放在左边），发生交换
			++i;					//i位置后移一位
		}
		while(i<j&&arr[j]<comp)		//当i<j并且数组中j位置的值小于comp的值，不发生交换
			++i;					//i位置后移一位
		if(i<j)
		{
			arr[j]=arr[i];			//如果上述条件不成立（数组中j位置的值大于等于comp的值，就需要放在右边），发生交换
			--j;					//j位置前移一位
		}
	}
	arr[i]=temp;					//枢轴的值赋给当前数组i位置
}



在顺序表中，借用一个数组下表k为枢轴进行比较，将顺序表划分为左右部分
顺序：	小<枢轴<大
只不过添加了一个compare进行比较
//int arr[]定义数组arr
//长度为n
void main 划分(int arr[],int n，int k)
{
	int temp;		//定义枢轴
	int i=0;		//定义从前往后遍历数的i
	int j=n-1;		//定义从后往前遍历数的j，从最后n-1
	temp=arr[0];	//元素交换。
	arr[0]=arr[k];	//第一个元素和数组下表为k的进行交换||arr[0]为一个交换中间值
	arr[k]=temp;	//元素交换。
	temp=arr[i];	////把第一个元素（此时i的值就位k的了，因为进行了交换）作为枢轴，依次进行对后面的值进行比较
	while(i<j)
	{
		while(i<j&&arr[j]>=temp)	//当i<j并且数组中j位置的值大于等于枢轴的值，不发生交换
			--j;					//j位置前移一位
		if(i<j)
		{
			arr[i]=arr[j];			//如果上述条件不成立（数组中j位置的值小于枢轴的值，就需要放在左边），发生交换
			++i;					//i位置后移一位
		}
		while(i<j&&arr[j]<temp)		//当i<j并且数组中j位置的值小于枢轴的值，不发生交换
			++i;					//i位置后移一位
		if(i<j)
		{
			arr[j]=arr[i];			//如果上述条件不成立（数组中j位置的值大于等于枢轴的值，就需要放在右边），发生交换
			--j;					//j位置前移一位
		}
	}
	arr[i]=temp;					//枢轴的值赋给当前数组i位置
}


